|TestCU
op1[0] => controlUnit:CONTUN.op[0]
op1[1] => controlUnit:CONTUN.op[1]
op1[2] => controlUnit:CONTUN.op[2]
op1[3] => controlUnit:CONTUN.op[3]
op1[4] => controlUnit:CONTUN.op[4]
op1[5] => controlUnit:CONTUN.op[5]
st1[0] => controlUnit:CONTUN.st[0]
st1[1] => controlUnit:CONTUN.st[1]
st1[2] => controlUnit:CONTUN.st[2]
st1[3] => controlUnit:CONTUN.st[3]
ALUop1[0] <= controlUnit:CONTUN.ALUop[0]
ALUop1[1] <= controlUnit:CONTUN.ALUop[1]
ALUsrcA1 <= controlUnit:CONTUN.ALUsrcA
ALUsrcB1[0] <= controlUnit:CONTUN.ALUsrcB[0]
ALUsrcB1[1] <= controlUnit:CONTUN.ALUsrcB[1]
PCsrc1[0] <= controlUnit:CONTUN.PCsrc[0]
PCsrc1[1] <= controlUnit:CONTUN.PCsrc[1]
PCwrCond1 <= controlUnit:CONTUN.PCwrCond
PCwr1 <= controlUnit:CONTUN.PCwr
RegWr1 <= controlUnit:CONTUN.RegWr
RegDst1 <= controlUnit:CONTUN.RegDst
IorD1 <= controlUnit:CONTUN.IorD
MemRd1 <= controlUnit:CONTUN.MemRd
MemWr1 <= controlUnit:CONTUN.MemWr
MemtoReg1 <= controlUnit:CONTUN.MemtoReg
IRwr1 <= controlUnit:CONTUN.IRwr
NextSt1[0] <= controlUnit:CONTUN.NextSt[0]
NextSt1[1] <= controlUnit:CONTUN.NextSt[1]
NextSt1[2] <= controlUnit:CONTUN.NextSt[2]
NextSt1[3] <= controlUnit:CONTUN.NextSt[3]


|TestCU|controlUnit:CONTUN
op[0] => Mux0.IN69
op[0] => Mux1.IN69
op[0] => Mux2.IN69
op[1] => Mux0.IN68
op[1] => Mux1.IN68
op[1] => Mux2.IN68
op[2] => Mux0.IN67
op[2] => Mux1.IN67
op[2] => Mux2.IN67
op[3] => Mux0.IN66
op[3] => Mux1.IN66
op[3] => Mux2.IN66
op[4] => Mux0.IN65
op[4] => Mux1.IN65
op[4] => Mux2.IN65
op[5] => Mux0.IN64
op[5] => Mux1.IN64
op[5] => Mux2.IN64
st[0] => Equal0.IN3
st[0] => Equal1.IN3
st[0] => Equal2.IN1
st[0] => Equal3.IN3
st[0] => Equal4.IN2
st[0] => Equal5.IN3
st[1] => Equal0.IN2
st[1] => Equal1.IN2
st[1] => Equal2.IN3
st[1] => Equal3.IN2
st[1] => Equal4.IN1
st[1] => Equal5.IN1
st[2] => Equal0.IN1
st[2] => Equal1.IN1
st[2] => Equal2.IN2
st[2] => Equal3.IN1
st[2] => Equal4.IN0
st[2] => Equal5.IN0
st[3] => Equal0.IN0
st[3] => Equal1.IN0
st[3] => Equal2.IN0
st[3] => Equal3.IN0
st[3] => Equal4.IN3
st[3] => Equal5.IN2
ALUop[0] <= ALUop[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
ALUop[1] <= ALUop[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
ALUsrcA <= ALUsrcA$latch.DB_MAX_OUTPUT_PORT_TYPE
ALUsrcB[0] <= ALUsrcB[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
ALUsrcB[1] <= ALUsrcB[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
PCsrc[0] <= PCsrc[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
PCsrc[1] <= PCsrc[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
PCwrCond <= PCwrCond$latch.DB_MAX_OUTPUT_PORT_TYPE
PCwr <= PCwr$latch.DB_MAX_OUTPUT_PORT_TYPE
RegWr <= RegWr$latch.DB_MAX_OUTPUT_PORT_TYPE
RegDst <= RegDst$latch.DB_MAX_OUTPUT_PORT_TYPE
IorD <= <GND>
MemRd <= MemRd$latch.DB_MAX_OUTPUT_PORT_TYPE
MemWr <= <GND>
MemtoReg <= <GND>
IRwr <= IRwr$latch.DB_MAX_OUTPUT_PORT_TYPE
NextSt[0] <= NextSt[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
NextSt[1] <= NextSt[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
NextSt[2] <= NextSt[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
NextSt[3] <= NextSt[3]$latch.DB_MAX_OUTPUT_PORT_TYPE


